
variables:
  DOCKER_DRIVER: overlay

## Official docker image, try not to use latest tag.
image: docker:stable

services:
  - docker:stable-dind

## Should contain at least these three stages(build, review, deploy) for a basic CI/CD
# deploy is done by another pipeline
stages:
  - check
  - build
  - test
  - release
  - deploy


cache:
  paths:


before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY

check:
  stage: check
  script:
    - echo "CI_COMMIT_REF_SLUG = $CI_COMMIT_REF_SLUG"
    - echo "CI_REGISTRY_IMAGE = $CI_REGISTRY_IMAGE"
    - echo "CI_COMMIT_SHORT_SHA = $CI_COMMIT_SHORT_SHA"
    - echo "CI_BUILD_REF = $CI_BUILD_REF"


build:
  stage: build
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  except:
    - tags


Unit Tests:
  stage: test
  image: docker:stable
  services:
  - name: docker:stable-dind
    alias: docker
  script:
    - echo "put unit tests here"
    - docker run -d -p 3000:80 $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - apk add curl
    - curl http://docker:3000/ | grep 'Biju Joseph'
  except:
    - tags


Integration Tests:
  stage: test
#  services:
#    - name: $CI_REGISTRY_IMAGE:$CI_BUILD_REF
#      alias: personal-website
  script:
    - echo "put integration tests here"
#    - curl http://personal-website:80/
  except:
    - tags


Lint:
  stage: test
  script:
    - echo "put linting here"

SAST:
  stage: test
  script:
    - echo "PUT SAST CHECK HERE"


# Non-master branches and tags will be released with :<ref_name> as the tag
release-by-name:
  stage: release
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  except:
    - master

# Master will be released with :latest as the tag
release-master:
  stage: release
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - master


deploy:
  stage: deploy
  script:
    - echo "Deployment is done using seperate pipeline for manageability"
    - echo "DONE DONE DONE!!!"
  when: manual
  allow_failure: false

